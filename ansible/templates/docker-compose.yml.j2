version: "3.9"
services:
  caddy:
    image: {{ caddy_image }}
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - {{ project_root }}/config/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - nextcloud
      - authentik-server
      - onlyoffice
    networks:
      - infra

  nextcloud:
    image: {{ nextcloud_image }}
    container_name: nextcloud
    restart: unless-stopped
    environment:
      MYSQL_HOST: nextcloud-db
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: {{ nextcloud_db_password }}
      MYSQL_ROOT_PASSWORD: {{ nextcloud_db_root_password }}
      REDIS_HOST: nextcloud-redis
      NEXTCLOUD_ADMIN_USER: {{ nextcloud_admin_user }}
      NEXTCLOUD_ADMIN_PASSWORD: {{ nextcloud_admin_password }}
      NEXTCLOUD_TRUSTED_DOMAINS: "nextcloud.{{ base_domain }} {{ base_domain }}"
      NEXTCLOUD_OVERWRITEHOST: nextcloud.{{ base_domain }}
      NEXTCLOUD_OVERWRITEPROTOCOL: https
      NEXTCLOUD_DEFAULT_PHONE_REGION: {{ nextcloud_default_phone_region }}
    volumes:
      - nextcloud_app:/var/www/html
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    networks:
      - infra

  nextcloud-db:
    image: {{ mariadb_image }}
    container_name: nextcloud-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: {{ nextcloud_db_root_password }}
      MYSQL_PASSWORD: {{ nextcloud_db_password }}
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
    command: ["--transaction-isolation=READ-COMMITTED", "--binlog-format=ROW"]
    volumes:
      - nextcloud_db:/var/lib/mysql
    networks:
      - infra

  nextcloud-redis:
    image: {{ redis_image }}
    container_name: nextcloud-redis
    restart: unless-stopped
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    networks:
      - infra

  onlyoffice:
    image: {{ onlyoffice_image }}
    container_name: onlyoffice
    restart: unless-stopped
    environment:
      JWT_ENABLED: "true"
      JWT_SECRET: {{ onlyoffice_jwt_secret }}
      JWT_HEADER: AuthorizationJwt
    volumes:
      - onlyoffice_data:/var/www/onlyoffice/Data
      - onlyoffice_logs:/var/log/onlyoffice
    networks:
      - infra

  authentik-server:
    image: {{ authentik_image }}
    container_name: authentik-server
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_SECRET_KEY: {{ authentik_secret_key }}
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_REDIS__PASSWORD: {{ authentik_redis_password }}
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__PORT: "5432"
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: {{ authentik_postgres_password }}
      AUTHENTIK_LISTEN__HTTP: 0.0.0.0:9000
    volumes:
      - authentik_media:/media
      - authentik_geoip:/geoip
    depends_on:
      - authentik-postgres
      - authentik-redis
    networks:
      - infra

  authentik-worker:
    image: {{ authentik_image }}
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_SECRET_KEY: {{ authentik_secret_key }}
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_REDIS__PASSWORD: {{ authentik_redis_password }}
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__PORT: "5432"
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: {{ authentik_postgres_password }}
    volumes:
      - authentik_media:/media
      - authentik_geoip:/geoip
    depends_on:
      - authentik-postgres
      - authentik-redis
    networks:
      - infra

  authentik-postgres:
    image: {{ postgres_image }}
    container_name: authentik-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: authentik
      POSTGRES_PASSWORD: {{ authentik_postgres_password }}
      POSTGRES_DB: authentik
    volumes:
      - authentik_postgres:/var/lib/postgresql/data
    networks:
      - infra

  authentik-redis:
    image: {{ redis_image }}
    container_name: authentik-redis
    restart: unless-stopped
    command: ["redis-server", "--save", "", "--appendonly", "no", "--requirepass", "{{ authentik_redis_password }}"]
    networks:
      - infra

networks:
  infra:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
  nextcloud_app:
  nextcloud_db:
  onlyoffice_data:
  onlyoffice_logs:
  authentik_media:
  authentik_geoip:
  authentik_postgres:
